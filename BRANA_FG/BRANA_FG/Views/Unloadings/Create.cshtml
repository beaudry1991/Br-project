@model BRANA_FG.Models.Unloading

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
@ViewBag.numEmbarquement
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Unloading</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.id_loading, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <input type="hidden" name="numEmb" id="numEmb" class = "form-control" value="@TempData["id_load"]" />
                @*@Html.ValidationMessageFor(model => model.id_loading, "", new { @class = "text-danger" })*@
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.qtite_palette_retr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.qtite_palette_retr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qtite_palette_retr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.time_unloading_debut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.time_unloading_debut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.time_unloading_debut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.time_unloading_fin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.time_unloading_fin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.time_unloading_fin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.remarque, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remarque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remarque, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.qtite_casse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.qtite_casse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qtite_casse, "", new { @class = "text-danger" })
            </div>
        </div>*@

        
        <div class="row">
            <div class="col-md-12">
                <div class="x_panel">
                    <div class="x_title">

                        <div class="x_content">
                            <table id="ex" class="table table-striped responsive-utilities">

                                <tbody>
                                    <tr class="odd pointer">
                                        <td class=" "><h4><strong>DESCRIPTION</strong></h4></td>
                                        <td class=" "></td>
                                        <td class=" "></td>
                                        <td class=" "><h4><strong>CASES</strong></h4></td>
                                        <td class=" "><h4><strong>BOTTLES</strong></h4></td>
                                    </tr>

                                    @for (var a = 0; a < (int)ViewBag.sizeP; a++)
                                    {
                                        for (var b = 0; b < (int)ViewBag.sizeUnload; b++)
                                        {
                                            if (ViewBag.produitlist[a].id == ViewBag.listUnload[b].id_produit)
                                            {

                                                var nomprod = ViewBag.produitlist[a].nom.ToString();
                                        <tr class="odd pointer">
                                            <td class=" ">@nomprod</td>
                                            <td class=" ">@ViewBag.produitlist[a].emballage.ToString()</td>
                                            <td class=" ">@ViewBag.produitlist[a].volume ML</td>
                                            <td class=" "><input type="hidden" name="idP" id="idP[@a]" value="@ViewBag.produitlist[a].id" />
                                            <input type="text" name="caisse" id="caisse[@a]" value="" /></td>
                                            <td class=" "><input type="text" name="bouteille" id="bouteille[@a]" value="" />/ @ViewBag.produitlist[a].qte_par_caisse</td>
                                        </tr>
                                            }
                                        }


                                    }

                                </tbody>

                            </table>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
